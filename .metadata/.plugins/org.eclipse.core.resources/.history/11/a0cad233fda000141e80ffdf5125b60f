package uptodate.gui;

import javax.swing.JPanel;



import java.awt.Color;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.WindowConstants;

import uptodate.logic.*;

public class GUI extends JPanel {
	private static JFrame game;
	//private static final Color BG_COLOR = new Color(0xbbada0);
	private static final String FONT_NAME = "Arial";
	private static final int TILE_SIZE = 64;
	private static final int TILES_MARGIN = 16;
	private int windowWidth;
	private int windowHeight;
	private GenericGameLogic gameManager;
	private int sideInput = 4;
	

	/**
	 * Create the panel.
	 */
	public GUI() {
		setFocusable(true);
		gameManager = new GenericGameLogic(sideInput);
		windowWidth = TILE_SIZE * sideInput + TILES_MARGIN * (sideInput + 1);
		windowHeight = TILE_SIZE * sideInput + TILES_MARGIN * (sideInput + 5);
		addKeyListener(new KeyAdapter() {
			@Override
			public void keyPressed(KeyEvent e) {
				// game logic state function
				gameManager.checkState(e);
				repaint();
			}
		});
		// now resets in gameManager constructor
		
		//RESIZE WINDOW FOR LENGTH
		game.setSize( windowWidth, windowHeight);
	}

	@Override
	public void paint(Graphics g) {
		super.paint(g);
		g.setColor(gameManager.getColorSet().getWindowColor());

		
		g.fillRect(0, 0, this.getSize().width, this.getSize().height);
		
		Graphics2D g2 = ((Graphics2D) g);
		
		for (int y = 0; y < sideInput; y++) {
			for (int x = 0; x < sideInput; x++) {
				GraphicsManager.drawTile(g2, gameManager.getTile(x + y * sideInput), x, y);
			}
		}
		GraphicsManager.printScore(g2, gameManager.getScore(), windowWidth, windowHeight);
		
		GraphicsManager.checkGameStatus(g2, gameManager.getWin(), gameManager.getLose(), windowWidth, windowHeight);
	}

	
	
	


	public static void main(String[] args) {
		game = new JFrame();
		game.setTitle("2048 Game");
		game.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
		game.setSize(340, 400);
		game.setResizable(false);

		game.add(new GUI());

		game.setLocationRelativeTo(null);
		game.setVisible(true);
	}

}

